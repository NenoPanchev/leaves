image: maven:3.6.3-jdk-11

stages:          # List of stages for jobs, and their order of execution
  - build
  - push
  - deploy

build:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - mvn clean install -DskipTests
  artifacts:
    paths:
      - target/leaves-*.jar

sonarqube-check:
  stage: build
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - mvn verify sonar:sonar -DDATABASE_NAME=${DATABASE_NAME} -DPOSTGRES_PASSWORD=${POSTGRES_PASSWORD} -DHOST_ADDRESS=${HOST_ADDRESS} -DskipTests -Dsonar.projectKey=lightsoftbulgaria_vacation-management-service_AYlJxQZfX5c1-Q-2oyTA

build-image-and-push:
  stage: push
  image: docker:dind
  variables:
   DOCKER_DRIVER: overlay2
   DOCKER_TLS_CERTDIR: "/certs"
  before_script:
  - apk add --no-cache git 
  script:
    - |
      if [[ "$CI_COMMIT_REF_NAME" == "master" ]]; then
        TAG="LATEST-SNAPSHOT"
      else
        TAG="$CI_COMMIT_REF_NAME"
      fi
      ls
      find / --name certificates
      docker build -t vacation_management_service:$TAG .
      docker tag vacation_management_service:$TAG docker.regisrty.lightsoftbulgaria.com/vacation_management_service:$TAG
      docker push docker.regisrty.lightsoftbulgaria.com/vacation_management_service:$TAG
      echo "DOCKER_IMAGE=docker.regisrty.lightsoftbulgaria.com/vacation_management_service:$TAG" >> build.env
  artifacts:
    reports:
      dotenv: build.env
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_TAG'
      when: always
    - if: '$CI_COMMIT_REF_NAME != "master"'
      when: manual
  dependencies:
    - build

deploy-image-to-openstack-zun:
  stage: deploy
  image: docker.regisrty.lightsoftbulgaria.com/openstack_zun_deployer:1.0
  script:
    - |
      echo "Start deploying"
      python3 /app/main.py
      echo "Deploy finished"  
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_TAG'
      when: manual
    - if: '$CI_COMMIT_REF_NAME != "master"'
      when: manual
  dependencies:
    - "build-image-and-push"
