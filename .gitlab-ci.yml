image: maven:3.6.3-jdk-11

stages:          # List of stages for jobs, and their order of execution
  # - test
  # - build
  # - sonar
  - push

# unit-test-job:   # This job runs in the test stage.
#   stage: test    # It only starts when the job in the build stage completes successfully.
#   script:
#     - echo "Running unit tests... "
#     - echo "Code coverage is 90%"

# lint-test-job:   # This job also runs in the test stage.
#   stage: test    # It can run at the same time as unit-test-job (in parallel).
#   script:
#     - echo "Linting code... This will take about 1 seconds."
#     - echo "No lint issues found."


# build-job:       # This job runs in the build stage, which runs first.
#   stage: build
#   script:
#     - mvn compile

# sonarqube-check:
#   stage: sonar
#   variables:
#     SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
#     GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
#   cache:
#     key: "${CI_JOB_NAME}"
#     paths:
#       - .sonar/cache
#   script: 
#     - mvn verify sonar:sonar -DDATABASE_NAME=${DATABASE_NAME} -DPOSTGRES_PASSWORD=${POSTGRES_PASSWORD} -DskipTests -Dsonar.projectKey=lightsoftbulgaria_vacation-management-service_AYk--zmEheLMcg5uOE2l

#   allow_failure: true

build-image-and-push:
  stage: push
  image: docker:dind
  variables:
    REGISTRY_IP: 192.168.20.94
  before_script:
  - apk add --no-cache git
  script:
    - |
      if [[ "$CI_COMMIT_REF_NAME" == "master" ]]; then
        TAG="latest"
      else
        TAG="$CI_COMMIT_REF_NAME"
      fi
      docker build -t ${REGISTRY_IP}/vacation_management_service:$TAG .
      docker login --username "" --password-stdin --password "" ${REGISTRY_IP}:5000
      docker push ${REGISTRY_IP}/vacation_management_service:$TAG
  rules:
    - exists:
